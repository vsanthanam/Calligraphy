{"includedArchiveIdentifiers":["Calligraphy"],"interfaceLanguages":{"swift":[{"children":[{"title":"String Composition","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/calligraphy\/buildarray(_:)","title":"static func buildArray([some Stroke]) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/calligraphy\/buildeither(first:)","title":"static func buildEither<First, Second>(first: First) -> Calligraphy._Either<First, Second>","type":"method"},{"path":"\/documentation\/calligraphy\/calligraphy\/buildeither(second:)","title":"static func buildEither<First, Second>(second: Second) -> Calligraphy._Either<First, Second>","type":"method"},{"path":"\/documentation\/calligraphy\/calligraphy\/buildexpression()","title":"static func buildExpression() -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/calligraphy\/buildexpression(_:)-4oj1t","title":"static func buildExpression(some CustomStringConvertible) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/calligraphy\/buildexpression(_:)-5whfk","title":"static func buildExpression(some StringProtocol) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/calligraphy\/buildexpression(_:)-644cv","title":"static func buildExpression(String) -> StringStroke","type":"method"},{"path":"\/documentation\/calligraphy\/calligraphy\/buildexpression(_:)-8lyvo","title":"static func buildExpression<T>(T) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/calligraphy\/buildexpression(_:)-92gb2","title":"static func buildExpression<T>(T) -> T","type":"method"},{"path":"\/documentation\/calligraphy\/calligraphy\/buildlimitedavailability(_:)","title":"static func buildLimitedAvailability(some Stroke) -> AnyStroke","type":"method"},{"path":"\/documentation\/calligraphy\/calligraphy\/buildoptional(_:)","title":"static func buildOptional<T>(T?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/calligraphy\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock<each Accumulated>(accumulated: repeat each Accumulated, next: some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/calligraphy\/buildpartialblock(first:)","title":"static func buildPartialBlock<T>(first: T) -> T","type":"method"}],"path":"\/documentation\/calligraphy\/calligraphy","title":"Calligraphy","type":"enum"},{"children":[{"title":"Protocol Requirements","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/calligraphy\/stroke\/content-6s7nm","title":"var content: String?","type":"property"}],"title":"Stroke Implementations","type":"groupMarker"}],"path":"\/documentation\/calligraphy\/stroke\/content-2e5q1","title":"var content: String?","type":"property"},{"path":"\/documentation\/calligraphy\/stroke\/body-swift.associatedtype","title":"Body","type":"associatedtype"},{"children":[{"children":[{"path":"\/documentation\/calligraphy\/stroke\/body-26lx0","title":"var body: Never","type":"property"}],"title":"Stroke Implementations","type":"groupMarker"}],"path":"\/documentation\/calligraphy\/stroke\/body-7yvos","title":"var body: Self.Body","type":"property"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/stroke\/map(fn:)","title":"func map(fn: (String?) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stroke\/map(with:)","title":"func map(with: (String?) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stroke\/maplines(fn:)","title":"func mapLines(fn: (String) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stroke\/maplines(with:)","title":"func mapLines(with: (String) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stroke\/prefixlines(with:)-7cyo4","title":"func prefixLines(with: () -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stroke\/prefixlines(with:)-771j8","title":"func prefixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stroke\/separatedby(_:)","title":"func separatedBy(String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stroke\/separatedby(calligraphy:)","title":"func separatedBy(calligraphy: () -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stroke\/suffixlines(with:)-6wigl","title":"func suffixLines(with: () -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stroke\/suffixlines(with:)-4h9j8","title":"func suffixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stroke\/tabbed(_:)","title":"func tabbed(Int) -> some Stroke","type":"method"}],"path":"\/documentation\/calligraphy\/stroke","title":"Stroke","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/line\/init(strokes:)","title":"init(strokes: () -> Strokes)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/line\/body","title":"var body: some Stroke","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/line\/content","title":"var content: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/line\/map(fn:)","title":"func map(fn: (String?) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/line\/map(with:)","title":"func map(with: (String?) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/line\/maplines(fn:)","title":"func mapLines(fn: (String) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/line\/maplines(with:)","title":"func mapLines(with: (String) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/line\/prefixlines(with:)","title":"func prefixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/line\/separatedby(_:)","title":"func separatedBy(String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/line\/separatedby(calligraphy:)","title":"func separatedBy(calligraphy: () -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/line\/suffixlines(with:)","title":"func suffixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/line\/tabbed(_:)","title":"func tabbed(Int) -> some Stroke","type":"method"}],"path":"\/documentation\/calligraphy\/line\/stroke-implementations","title":"Stroke Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/line","title":"Line","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/lines\/init(spacing:strokes:)","title":"init(spacing: Int, strokes: () -> Strokes)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/lines\/body","title":"var body: some Stroke","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/lines\/content","title":"var content: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/lines\/map(fn:)","title":"func map(fn: (String?) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/lines\/map(with:)","title":"func map(with: (String?) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/lines\/maplines(fn:)","title":"func mapLines(fn: (String) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/lines\/maplines(with:)","title":"func mapLines(with: (String) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/lines\/prefixlines(with:)","title":"func prefixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/lines\/separatedby(_:)","title":"func separatedBy(String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/lines\/separatedby(calligraphy:)","title":"func separatedBy(calligraphy: () -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/lines\/suffixlines(with:)","title":"func suffixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/lines\/tabbed(_:)","title":"func tabbed(Int) -> some Stroke","type":"method"}],"path":"\/documentation\/calligraphy\/lines\/stroke-implementations","title":"Stroke Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/lines","title":"Lines","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/newline\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/newline\/body","title":"var body: some Stroke","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/newline\/content","title":"var content: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/newline\/map(fn:)","title":"func map(fn: (String?) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/newline\/map(with:)","title":"func map(with: (String?) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/newline\/maplines(fn:)","title":"func mapLines(fn: (String) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/newline\/maplines(with:)","title":"func mapLines(with: (String) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/newline\/prefixlines(with:)","title":"func prefixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/newline\/separatedby(_:)","title":"func separatedBy(String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/newline\/separatedby(calligraphy:)","title":"func separatedBy(calligraphy: () -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/newline\/suffixlines(with:)","title":"func suffixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/newline\/tabbed(_:)","title":"func tabbed(Int) -> some Stroke","type":"method"}],"path":"\/documentation\/calligraphy\/newline\/stroke-implementations","title":"Stroke Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/newline","title":"NewLine","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/tab\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/tab\/body","title":"var body: some Stroke","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/tab\/content","title":"var content: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/tab\/map(fn:)","title":"func map(fn: (String?) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tab\/map(with:)","title":"func map(with: (String?) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tab\/maplines(fn:)","title":"func mapLines(fn: (String) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tab\/maplines(with:)","title":"func mapLines(with: (String) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tab\/prefixlines(with:)","title":"func prefixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tab\/separatedby(_:)","title":"func separatedBy(String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tab\/separatedby(calligraphy:)","title":"func separatedBy(calligraphy: () -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tab\/suffixlines(with:)","title":"func suffixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tab\/tabbed(_:)","title":"func tabbed(Int) -> some Stroke","type":"method"}],"path":"\/documentation\/calligraphy\/tab\/stroke-implementations","title":"Stroke Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/tab","title":"Tab","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/space\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/space\/body","title":"var body: some Stroke","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/space\/content","title":"var content: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/space\/map(fn:)","title":"func map(fn: (String?) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/space\/map(with:)","title":"func map(with: (String?) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/space\/maplines(fn:)","title":"func mapLines(fn: (String) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/space\/maplines(with:)","title":"func mapLines(with: (String) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/space\/prefixlines(with:)","title":"func prefixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/space\/separatedby(_:)","title":"func separatedBy(String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/space\/separatedby(calligraphy:)","title":"func separatedBy(calligraphy: () -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/space\/suffixlines(with:)","title":"func suffixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/space\/tabbed(_:)","title":"func tabbed(Int) -> some Stroke","type":"method"}],"path":"\/documentation\/calligraphy\/space\/stroke-implementations","title":"Stroke Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/space","title":"Space","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/stringstroke\/init(_:)","title":"init(some StringProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/stringstroke\/content","title":"let content: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/stringstroke\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/stringstroke\/map(fn:)","title":"func map(fn: (String?) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stringstroke\/map(with:)","title":"func map(with: (String?) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stringstroke\/maplines(fn:)","title":"func mapLines(fn: (String) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stringstroke\/maplines(with:)","title":"func mapLines(with: (String) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stringstroke\/prefixlines(with:)","title":"func prefixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stringstroke\/separatedby(_:)","title":"func separatedBy(String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stringstroke\/separatedby(calligraphy:)","title":"func separatedBy(calligraphy: () -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stringstroke\/suffixlines(with:)","title":"func suffixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/stringstroke\/tabbed(_:)","title":"func tabbed(Int) -> some Stroke","type":"method"}],"path":"\/documentation\/calligraphy\/stringstroke\/stroke-implementations","title":"Stroke Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/stringstroke","title":"StringStroke","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/strokes\/init(stroke:)","title":"init(stroke: () -> T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/strokes\/body","title":"var body: some Stroke","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/strokes\/content","title":"var content: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/strokes\/map(fn:)","title":"func map(fn: (String?) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/strokes\/map(with:)","title":"func map(with: (String?) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/strokes\/maplines(fn:)","title":"func mapLines(fn: (String) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/strokes\/maplines(with:)","title":"func mapLines(with: (String) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/strokes\/prefixlines(with:)","title":"func prefixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/strokes\/separatedby(_:)","title":"func separatedBy(String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/strokes\/separatedby(calligraphy:)","title":"func separatedBy(calligraphy: () -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/strokes\/suffixlines(with:)","title":"func suffixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/strokes\/tabbed(_:)","title":"func tabbed(Int) -> some Stroke","type":"method"}],"path":"\/documentation\/calligraphy\/strokes\/stroke-implementations","title":"Stroke Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/strokes","title":"Strokes","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/tabbed\/init(_:strokes:)","title":"init(Int, strokes: () -> T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/tabbed\/body","title":"var body: some Stroke","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/tabbed\/content","title":"var content: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/tabbed\/map(fn:)","title":"func map(fn: (String?) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tabbed\/map(with:)","title":"func map(with: (String?) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tabbed\/maplines(fn:)","title":"func mapLines(fn: (String) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tabbed\/maplines(with:)","title":"func mapLines(with: (String) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tabbed\/prefixlines(with:)","title":"func prefixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tabbed\/separatedby(_:)","title":"func separatedBy(String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tabbed\/separatedby(calligraphy:)","title":"func separatedBy(calligraphy: () -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tabbed\/suffixlines(with:)","title":"func suffixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/tabbed\/tabbed(_:)","title":"func tabbed(Int) -> some Stroke","type":"method"}],"path":"\/documentation\/calligraphy\/tabbed\/stroke-implementations","title":"Stroke Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/tabbed","title":"Tabbed","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/anystroke\/init(_:)","title":"init(some Stroke)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/anystroke\/content","title":"var content: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/anystroke\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/anystroke\/map(fn:)","title":"func map(fn: (String?) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/anystroke\/map(with:)","title":"func map(with: (String?) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/anystroke\/maplines(fn:)","title":"func mapLines(fn: (String) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/anystroke\/maplines(with:)","title":"func mapLines(with: (String) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/anystroke\/prefixlines(with:)","title":"func prefixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/anystroke\/separatedby(_:)","title":"func separatedBy(String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/anystroke\/separatedby(calligraphy:)","title":"func separatedBy(calligraphy: () -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/anystroke\/suffixlines(with:)","title":"func suffixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/anystroke\/tabbed(_:)","title":"func tabbed(Int) -> some Stroke","type":"method"}],"path":"\/documentation\/calligraphy\/anystroke\/stroke-implementations","title":"Stroke Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/anystroke","title":"AnyStroke","type":"struct"},{"title":"Directory Composition","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/directorycontent\/write(todirectory:encoding:shouldoverwrite:)-2zupw","title":"func write(toDirectory: URL, encoding: String.Encoding, shouldOverwrite: Bool) async throws -> [URL]","type":"method"},{"path":"\/documentation\/calligraphy\/directorycontent\/write(todirectory:encoding:shouldoverwrite:)-3oa4z","title":"func write(toDirectory: URL, encoding: String.Encoding, shouldOverwrite: Bool) throws -> [URL]","type":"method"}],"path":"\/documentation\/calligraphy\/directorycontent","title":"DirectoryContent","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/file\/body-swift.associatedtype","title":"Body","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/calligraphy\/file\/body-6tbdd","title":"var body: Self.Body","type":"property"}],"title":"File Implementations","type":"groupMarker"}],"path":"\/documentation\/calligraphy\/file\/body-14atr","title":"var body: Self.Body","type":"property"},{"children":[{"children":[{"path":"\/documentation\/calligraphy\/file\/content-mm9l","title":"var content: String","type":"property"}],"title":"File Implementations","type":"groupMarker"}],"path":"\/documentation\/calligraphy\/file\/content-7uuc6","title":"var content: String","type":"property"},{"path":"\/documentation\/calligraphy\/file\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/calligraphy\/file","title":"File","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/directory\/body-swift.associatedtype","title":"Body","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/directory\/body-swift.property","title":"var body: Self.Body","type":"property"},{"children":[{"children":[{"path":"\/documentation\/calligraphy\/directory\/contents-6lt4w","title":"var contents: [SerializedDirectoryContent]","type":"property"}],"title":"Directory Implementations","type":"groupMarker"}],"path":"\/documentation\/calligraphy\/directory\/contents-5287d","title":"var contents: [SerializedDirectoryContent]","type":"property"},{"path":"\/documentation\/calligraphy\/directory\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/calligraphy\/directory","title":"Directory","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/directorycontentbuilder\/buildarray(_:)","title":"static func buildArray([some DirectoryContent]) -> some DirectoryContent","type":"method"},{"path":"\/documentation\/calligraphy\/directorycontentbuilder\/buildeither(first:)","title":"static func buildEither<First, Second>(first: First) -> DirectoryContentBuilder._Either<First, Second>","type":"method"},{"path":"\/documentation\/calligraphy\/directorycontentbuilder\/buildeither(second:)","title":"static func buildEither<First, Second>(second: Second) -> DirectoryContentBuilder._Either<First, Second>","type":"method"},{"path":"\/documentation\/calligraphy\/directorycontentbuilder\/buildexpression()","title":"static func buildExpression<T>() -> some DirectoryContent","type":"method"},{"path":"\/documentation\/calligraphy\/directorycontentbuilder\/buildexpression(_:)-1f6j6","title":"static func buildExpression(SerializedDirectoryContent.Directory) -> some DirectoryContent","type":"method"},{"path":"\/documentation\/calligraphy\/directorycontentbuilder\/buildexpression(_:)-388py","title":"static func buildExpression<T>(T) -> T","type":"method"},{"path":"\/documentation\/calligraphy\/directorycontentbuilder\/buildexpression(_:)-4x3r7","title":"static func buildExpression(SerializedDirectoryContent) -> some DirectoryContent","type":"method"},{"path":"\/documentation\/calligraphy\/directorycontentbuilder\/buildexpression(_:)-4yhos","title":"static func buildExpression(SerializedDirectoryContent.File) -> some DirectoryContent","type":"method"},{"path":"\/documentation\/calligraphy\/directorycontentbuilder\/buildexpression(_:)-7cbx3","title":"static func buildExpression([SerializedDirectoryContent]) -> some DirectoryContent","type":"method"},{"path":"\/documentation\/calligraphy\/directorycontentbuilder\/buildlimitedavailability(_:)","title":"static func buildLimitedAvailability(some DirectoryContent) -> AnyDirectoryContent","type":"method"},{"path":"\/documentation\/calligraphy\/directorycontentbuilder\/buildoptional(component:)","title":"static func buildOptional<T>(component: T?) -> some DirectoryContent","type":"method"},{"path":"\/documentation\/calligraphy\/directorycontentbuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock<each Accumulated>(accumulated: repeat each Accumulated, next: some DirectoryContent) -> some DirectoryContent","type":"method"},{"path":"\/documentation\/calligraphy\/directorycontentbuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock<T>(first: T) -> T","type":"method"}],"path":"\/documentation\/calligraphy\/directorycontentbuilder","title":"DirectoryContentBuilder","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/folder\/init(_:contents:)","title":"init(String, contents: () -> Body)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/folder\/body","title":"let body: Body","type":"property"},{"path":"\/documentation\/calligraphy\/folder\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/folder\/contents","title":"var contents: [SerializedDirectoryContent]","type":"property"}],"path":"\/documentation\/calligraphy\/folder\/directory-implementations","title":"Directory Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/folder\/write(todirectory:encoding:shouldoverwrite:)","title":"func write(toDirectory: URL, encoding: String.Encoding, shouldOverwrite: Bool) throws -> [URL]","type":"method"}],"path":"\/documentation\/calligraphy\/folder\/directorycontent-implementations","title":"DirectoryContent Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/folder","title":"Folder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/textfile\/init(_:content:)-1zz7m","title":"init(String, content: () -> T)","type":"init"},{"path":"\/documentation\/calligraphy\/textfile\/init(_:content:)-3cxgx","title":"init(String, content: String)","type":"init"},{"path":"\/documentation\/calligraphy\/textfile\/init(_:extension:content:)-5vc8x","title":"init(String, extension: String, content: () -> T)","type":"init"},{"path":"\/documentation\/calligraphy\/textfile\/init(_:extension:content:)-9v1ea","title":"init(String, extension: String, content: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/textfile\/body","title":"let body: T","type":"property"},{"path":"\/documentation\/calligraphy\/textfile\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/textfile\/write(todirectory:encoding:shouldoverwrite:)","title":"func write(toDirectory: URL, encoding: String.Encoding, shouldOverwrite: Bool) throws -> [URL]","type":"method"}],"path":"\/documentation\/calligraphy\/textfile\/directorycontent-implementations","title":"DirectoryContent Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/textfile\/content","title":"var content: String","type":"property"}],"path":"\/documentation\/calligraphy\/textfile\/file-implementations","title":"File Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/textfile","title":"TextFile","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/directorycontents\/init(contents:)","title":"init(contents: () -> T)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/directorycontents\/write(todirectory:encoding:shouldoverwrite:)","title":"func write(toDirectory: URL, encoding: String.Encoding, shouldOverwrite: Bool) throws -> [URL]","type":"method"}],"path":"\/documentation\/calligraphy\/directorycontents\/directorycontent-implementations","title":"DirectoryContent Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/directorycontents","title":"DirectoryContents","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/directory\/init(name:contents:)","title":"init(name: String, contents: [SerializedDirectoryContent])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/directory\/contents","title":"let contents: [SerializedDirectoryContent]","type":"property"},{"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/directory\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/directory\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/directory\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/directory","title":"SerializedDirectoryContent.Directory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/file\/init(name:content:)","title":"init(name: String, content: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/file\/content","title":"let content: String","type":"property"},{"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/file\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/file\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/file\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/file","title":"SerializedDirectoryContent.File","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/directory(_:)","title":"case directory(SerializedDirectoryContent.Directory)","type":"case"},{"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/file(_:)","title":"case file(SerializedDirectoryContent.File)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/calligraphy\/serializeddirectorycontent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/serializeddirectorycontent","title":"SerializedDirectoryContent","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/anydirectorycontent\/init(_:)","title":"init(some DirectoryContent)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/anydirectorycontent\/write(todirectory:encoding:shouldoverwrite:)","title":"func write(toDirectory: URL, encoding: String.Encoding, shouldOverwrite: Bool) throws -> [URL]","type":"method"}],"path":"\/documentation\/calligraphy\/anydirectorycontent\/directorycontent-implementations","title":"DirectoryContent Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/anydirectorycontent","title":"AnyDirectoryContent","type":"struct"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/swift\/string\/init(calligraphy:)","title":"init(calligraphy: () -> some Stroke)","type":"init"},{"path":"\/documentation\/calligraphy\/swift\/string\/init(stroke:)","title":"init(stroke: some Stroke)","type":"init"}],"path":"\/documentation\/calligraphy\/swift\/string","title":"String","type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/swift\/never\/write(todirectory:encoding:shouldoverwrite:)","title":"func write(toDirectory: URL, encoding: String.Encoding, shouldOverwrite: Bool) throws -> [URL]","type":"method"}],"path":"\/documentation\/calligraphy\/swift\/never\/directorycontent-implementations","title":"DirectoryContent Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/swift\/never\/body","title":"var body: Never","type":"property"},{"path":"\/documentation\/calligraphy\/swift\/never\/content","title":"var content: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/calligraphy\/swift\/never\/map(fn:)","title":"func map(fn: (String?) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/swift\/never\/map(with:)","title":"func map(with: (String?) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/swift\/never\/maplines(fn:)","title":"func mapLines(fn: (String) -> String?) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/swift\/never\/maplines(with:)","title":"func mapLines(with: (String) -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/swift\/never\/prefixlines(with:)","title":"func prefixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/swift\/never\/separatedby(_:)","title":"func separatedBy(String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/swift\/never\/separatedby(calligraphy:)","title":"func separatedBy(calligraphy: () -> some Stroke) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/swift\/never\/suffixlines(with:)","title":"func suffixLines(with: String) -> some Stroke","type":"method"},{"path":"\/documentation\/calligraphy\/swift\/never\/tabbed(_:)","title":"func tabbed(Int) -> some Stroke","type":"method"}],"path":"\/documentation\/calligraphy\/swift\/never\/stroke-implementations","title":"Stroke Implementations","type":"symbol"}],"path":"\/documentation\/calligraphy\/swift\/never","title":"Never","type":"extension"}],"path":"\/documentation\/calligraphy\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/calligraphy","title":"Calligraphy","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}