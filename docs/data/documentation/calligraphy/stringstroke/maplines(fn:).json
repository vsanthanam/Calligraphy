{"variants":[{"paths":["\/documentation\/calligraphy\/stringstroke\/maplines(fn:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","abstract":[{"text":"Map every line of a multi-line stroke","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mapLines"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fn"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Calligraphy6StrokeP","identifier":"doc:\/\/Calligraphy\/documentation\/Calligraphy\/Stroke","kind":"typeIdentifier","text":"Stroke"},{"text":"\n","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"fn","content":[{"inlineContent":[{"text":"The function used to map each line into another string.","type":"text"},{"type":"text","text":" "},{"text":"If the provdided function returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", the line will be omitted"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The line mapped stoke"}]}]}],"metadata":{"role":"symbol","platforms":[{"deprecated":false,"introducedAt":"18.0","unavailable":false,"name":"iOS","beta":false},{"beta":false,"deprecated":false,"introducedAt":"18.0","name":"Mac Catalyst","unavailable":false},{"name":"macOS","beta":false,"deprecated":false,"introducedAt":"15.0","unavailable":false},{"unavailable":false,"beta":false,"name":"tvOS","deprecated":false,"introducedAt":"18.0"},{"deprecated":false,"name":"visionOS","introducedAt":"2.0","unavailable":false,"beta":false},{"name":"watchOS","introducedAt":"11.0","unavailable":false,"beta":false,"deprecated":false}],"title":"mapLines(fn:)","symbolKind":"method","extendedModule":"Calligraphy","modules":[{"name":"Calligraphy"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"mapLines","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fn","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Calligraphy6StrokeP","text":"Stroke","kind":"typeIdentifier"}],"externalID":"s:11Calligraphy6StrokePAAE8mapLines2fnQrSSSgSSYbc_tF::SYNTHESIZED::s:11Calligraphy12StringStrokeV","roleHeading":"Instance Method"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Calligraphy\/documentation\/Calligraphy","doc:\/\/Calligraphy\/documentation\/Calligraphy\/StringStroke","doc:\/\/Calligraphy\/documentation\/Calligraphy\/StringStroke\/Stroke-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Calligraphy\/documentation\/Calligraphy\/StringStroke\/mapLines(fn:)"},"references":{"doc://Calligraphy/documentation/Calligraphy/StringStroke/mapLines(fn:)":{"title":"mapLines(fn:)","abstract":[{"text":"Map every line of a multi-line stroke","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/calligraphy\/stringstroke\/maplines(fn:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"mapLines","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"fn"},{"text":": (","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Stroke","preciseIdentifier":"s:11Calligraphy6StrokeP"}],"identifier":"doc:\/\/Calligraphy\/documentation\/Calligraphy\/StringStroke\/mapLines(fn:)","role":"symbol"},"doc://Calligraphy/documentation/Calligraphy/StringStroke":{"url":"\/documentation\/calligraphy\/stringstroke","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringStroke"}],"title":"StringStroke","navigatorTitle":[{"text":"StringStroke","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Calligraphy\/documentation\/Calligraphy\/StringStroke","kind":"symbol","abstract":[{"type":"text","text":"A stroke containing a single "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}]},"doc://Calligraphy/documentation/Calligraphy/Stroke":{"title":"Stroke","url":"\/documentation\/calligraphy\/stroke","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stroke","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A protocol representing a component of a string"}],"identifier":"doc:\/\/Calligraphy\/documentation\/Calligraphy\/Stroke","navigatorTitle":[{"text":"Stroke","kind":"identifier"}],"kind":"symbol"},"doc://Calligraphy/documentation/Calligraphy":{"title":"Calligraphy","role":"collection","abstract":[{"text":"A declarative library for composing strings, text, files, and folders in Swift","type":"text"}],"url":"\/documentation\/calligraphy","kind":"symbol","type":"topic","identifier":"doc:\/\/Calligraphy\/documentation\/Calligraphy"},"doc://Calligraphy/documentation/Calligraphy/StringStroke/Stroke-Implementations":{"abstract":[],"url":"\/documentation\/calligraphy\/stringstroke\/stroke-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/Calligraphy\/documentation\/Calligraphy\/StringStroke\/Stroke-Implementations","title":"Stroke Implementations","kind":"article"}}}