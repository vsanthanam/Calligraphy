{"identifier":{"url":"doc:\/\/Calligraphy\/documentation\/Calligraphy\/StringStroke\/mapLines(fn:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","modules":[{"name":"Calligraphy"}],"extendedModule":"Calligraphy","title":"mapLines(fn:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapLines"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fn"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Calligraphy6StrokeP","kind":"typeIdentifier","text":"Stroke"}],"platforms":[{"beta":false,"unavailable":false,"deprecated":false,"name":"iOS","introducedAt":"18.0"},{"name":"Mac Catalyst","introducedAt":"18.0","deprecated":false,"beta":false,"unavailable":false},{"unavailable":false,"beta":false,"name":"macOS","introducedAt":"15.0","deprecated":false},{"unavailable":false,"deprecated":false,"introducedAt":"18.0","name":"tvOS","beta":false},{"beta":false,"name":"visionOS","deprecated":false,"unavailable":false,"introducedAt":"2.0"},{"deprecated":false,"name":"watchOS","beta":false,"introducedAt":"11.0","unavailable":false}],"roleHeading":"Instance Method","externalID":"s:11Calligraphy6StrokePAAE8mapLines2fnQrSSSgSSYbc_tF::SYNTHESIZED::s:11Calligraphy12StringStrokeV","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/calligraphy\/stringstroke\/maplines(fn:)"]}],"kind":"symbol","abstract":[{"text":"Map every line of a multi-line stroke","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mapLines"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fn"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"Stroke","identifier":"doc:\/\/Calligraphy\/documentation\/Calligraphy\/Stroke","kind":"typeIdentifier","preciseIdentifier":"s:11Calligraphy6StrokeP"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"fn","content":[{"type":"paragraph","inlineContent":[{"text":"The function used to map each line into another string.","type":"text"},{"type":"text","text":" "},{"text":"If the provdided function returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", the line will be omitted"}]}]}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"The line mapped stoke"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Calligraphy\/documentation\/Calligraphy","doc:\/\/Calligraphy\/documentation\/Calligraphy\/StringStroke","doc:\/\/Calligraphy\/documentation\/Calligraphy\/StringStroke\/Stroke-Implementations"]]},"sections":[],"references":{"doc://Calligraphy/documentation/Calligraphy":{"title":"Calligraphy","identifier":"doc:\/\/Calligraphy\/documentation\/Calligraphy","type":"topic","url":"\/documentation\/calligraphy","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A declarative library for composing strings, text, files, and folders in Swift"}]},"doc://Calligraphy/documentation/Calligraphy/StringStroke/mapLines(fn:)":{"identifier":"doc:\/\/Calligraphy\/documentation\/Calligraphy\/StringStroke\/mapLines(fn:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mapLines","kind":"identifier"},{"kind":"text","text":"("},{"text":"fn","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Stroke","preciseIdentifier":"s:11Calligraphy6StrokeP"}],"kind":"symbol","type":"topic","url":"\/documentation\/calligraphy\/stringstroke\/maplines(fn:)","title":"mapLines(fn:)","role":"symbol","abstract":[{"text":"Map every line of a multi-line stroke","type":"text"}]},"doc://Calligraphy/documentation/Calligraphy/Stroke":{"url":"\/documentation\/calligraphy\/stroke","identifier":"doc:\/\/Calligraphy\/documentation\/Calligraphy\/Stroke","title":"Stroke","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Stroke"}],"abstract":[{"text":"A protocol representing a component of a string","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stroke"}]},"doc://Calligraphy/documentation/Calligraphy/StringStroke":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"StringStroke","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"StringStroke"}],"title":"StringStroke","role":"symbol","identifier":"doc:\/\/Calligraphy\/documentation\/Calligraphy\/StringStroke","abstract":[{"text":"A stroke containing a single ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/calligraphy\/stringstroke"},"doc://Calligraphy/documentation/Calligraphy/StringStroke/Stroke-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/Calligraphy\/documentation\/Calligraphy\/StringStroke\/Stroke-Implementations","url":"\/documentation\/calligraphy\/stringstroke\/stroke-implementations","title":"Stroke Implementations","type":"topic","abstract":[],"kind":"article"}}}